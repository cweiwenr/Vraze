@model Vraze.Models.Challenge
@{
    ViewData["Title"] = "Edit Challenge";
}
<div class="text-center">
    <h1 class="display-4">Edit Challenge Information</h1>
</div>
<div class="row">
    <div class="col-md-12">
        <h6>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Admin" asp-action="Home">Home</a></li>
                    <li class="breadcrumb-item"><a asp-controller="Challenge" asp-action="Manage">Facilitators</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Edit Challenge Information</li>
                </ol>
            </nav>
        </h6>
    </div>
</div>
<div class="col-lg-8 mx-auto mt-3">
    <div class="card">
        <div class="card-body">
            <h2 class="text-info">Challenge Information</h2>
            <form>
                <div class="form-group row">
                    <label for="tbImage" class="col-sm-2 col-form-label">Map Image</label>
                    <div class="col-sm-10">
                        <img id="imgMap" src="@Model.MapImageUrl" alt="" width="90" /><br />
                        <div class="custom-file mt-2">
                            <input type="file" class="custom-file-input" id="tbImage">
                            <label id="lblFile" class="custom-file-label" for="customFile">Choose file</label>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-2 col-form-label">Hints</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control mb-2" placeholder="Hint #1" id="tbHint1" value="@Model.Hints.ToList()[0].HintInformation" />
                        <input type="text" class="form-control mb-2" placeholder="Hint #2" id="tbHint2" value="@Model.Hints.ToList()[1].HintInformation" />
                        <input type="text" class="form-control mb-2" placeholder="Hint #3" id="tbHint3" value="@Model.Hints.ToList()[2].HintInformation" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="tbSolution" class="col-sm-2 col-form-label">Solution</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control" id="tbSolution" value="@Model.Solution">
                    </div>
                </div>
                <div class="form-group form-check">
                    @if (Model.IsTutorialChallenge)
                    {
                        <input type="checkbox" class="form-check-input" id="cbTutorial" checked>
                    }
                    else
                    {
                        <input type="checkbox" class="form-check-input" id="cbTutorial">
                    }
                    <label for="cbTutorial" class="form-check-label">Is tutorial Challenge?</label>
                </div>
                <div class="form-group row">
                    @if (Model.IsDeleted)
                    {
                        <div class="col-md-6">
                            <a asp-action="Manage" asp-controller="Challenge" id="btnBack" class="btn btn-secondary btn-block">Back</a>
                        </div>
                        <div class="col-md-6">
                            <span id="btnRestore" class="btn btn-primary btn-block">Restore</span>
                        </div>
                    }
                    else
                    {
                        <div class="col-md-4">
                            <a asp-action="Manage" asp-controller="Challenge" id="btnBack" class="btn btn-success btn-block"><i class="fas fa-sign-out-alt"></i> Back</a>
                        </div>
                        <div class="col-md-4">
                            <span id="btnSubmit" class="btn btn-primary btn-block">Update</span>
                        </div>
                        <div class="col-md-4">
                            <span id="btnDelete" class="btn btn-danger btn-block">Delete</span>
                        </div>
                    }
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    var CLOUDINARY_URL = "https://api.cloudinary.com/v1_1/dj6afbyih/image/upload";
    var CLOUDINARY_UPLOAD_PRESET = "gsdndegy";
    var currentFile = null;
    $(document).ready(function () {

        $("#tbImage").on("change", function (event) {
            currentFile = event.target.files[0];
            $("#lblFile").text($('input[type=file]').val().split('\\').pop());
        });

        $("#btnSubmit").click(function () {
            if (currentFile == null) {
                submitForm($('#imgMap').attr('src'));
            }
            else {
                uploadToCloudinaryAndSubmit();
            }
        });

        $("#btnDelete").click(function () {
            Swal.fire({
                title: 'Are you sure you want to delete this challenge?',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'No',
                confirmButtonText: 'Yes',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch('./Delete/@Model.ChallengeId')
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            console.log("respone: ", response);
                            location.replace('/Challenge/Manage');
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            });
        });

        $("btnRestore").click(function () {
            Swal.fire({
                title: 'Are you sure you want to restore this challenge?',
                icon: 'warning',
                showCancelButton: true,
                cancelButtonText: 'No',
                confirmButtonText: 'Yes',
                showLoaderOnConfirm: true,
                preConfirm: (login) => {
                    return fetch('./Restore/@Model.ChallengeId')
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(response.statusText)
                            }
                            console.log("respone: ", response);
                            location.replace('/Challenge/Manage');
                        })
                        .catch(error => {
                            Swal.showValidationMessage(
                                `Request failed: ${error}`
                            )
                        })
                },
                allowOutsideClick: () => !Swal.isLoading()
            });
        });

        function submitForm(imageUri) {
            var hints = [];
            hints.push($("#tbHint1").val());
            hints.push($("#tbHint2").val());
            hints.push($("#tbHint3").val());

            function WebFormData(hints, imageUri, solution, istut) {
                this.Hints = hints;
                this.MapImageUrl = imageUri;
                this.Solution = solution;
                this.IsTutorialChallenge = istut;
                this.IsDeleted = false
            }
            var webFormData = new WebFormData(hints, imageUri, $("#tbSolution").val(), $('#cbTutorial').is(":checked"));

            var webFormDataInString = JSON.stringify(webFormData);

            console.log(webFormData);
            console.log(webFormDataInString);

            $.ajax({
                url: "/challenge/edit/@Model.ChallengeId",
                type: "POST",
                dataType: "json",
                contentType: "application/json",
                data: webFormDataInString,
                success: function (response) {
                    location.replace('/Challenge/Manage');
                },
                error: function (error) { console.log(error); }
            });
        }

        function uploadToCloudinaryAndSubmit() {
            var formData = new FormData();
            formData.append("file", currentFile);
            formData.append("upload_preset", CLOUDINARY_UPLOAD_PRESET);

            $.ajax({
                url: CLOUDINARY_URL,
                type: "POST",
                contentType: false,
                processData: false,
                data: formData,
                success: function (response) {
                    var imageUri = response["url"]; //Link of the uploaded image

                    submitForm(imageUri)
                },
                error: function (error) {
                    console.log(error);
                },
            });
        }
    });</script>