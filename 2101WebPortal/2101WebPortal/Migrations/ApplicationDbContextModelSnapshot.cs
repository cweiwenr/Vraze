// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vraze.Models;

namespace Vraze.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Vraze.Models.Challenge", b =>
                {
                    b.Property<int>("ChallengeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTutorialChallenge")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MapImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Solution")
                        .HasColumnType("TEXT");

                    b.HasKey("ChallengeId");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("Vraze.Models.ChallengeHistory", b =>
                {
                    b.Property<int>("ChallengeHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("CarDistanceTravelled")
                        .HasColumnType("REAL");

                    b.Property<double?>("CarSpeed")
                        .HasColumnType("REAL");

                    b.Property<int>("ChallengeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Solution")
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChallengeHistoryId");

                    b.HasIndex("ChallengeId");

                    b.HasIndex("SessionId");

                    b.HasIndex("StudentId");

                    b.ToTable("ChallengeHistories");
                });

            modelBuilder.Entity("Vraze.Models.Facilitator", b =>
                {
                    b.Property<int>("FacilitatorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FacilitatorName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSystemAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("FacilitatorId");

                    b.ToTable("Facilitators");
                });

            modelBuilder.Entity("Vraze.Models.GameSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChallengeList")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedByFacilitatorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SessionEndTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("SessionStartTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentList")
                        .HasColumnType("TEXT");

                    b.HasKey("SessionId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("Vraze.Models.Hint", b =>
                {
                    b.Property<int>("HintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChallengeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HintInformation")
                        .HasColumnType("TEXT");

                    b.HasKey("HintId");

                    b.HasIndex("ChallengeId");

                    b.ToTable("Hints");
                });

            modelBuilder.Entity("Vraze.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasCompletedTutorial")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Vraze.Models.ChallengeHistory", b =>
                {
                    b.HasOne("Vraze.Models.Challenge", "Challenge")
                        .WithMany()
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vraze.Models.GameSession", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vraze.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Challenge");

                    b.Navigation("Session");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Vraze.Models.Hint", b =>
                {
                    b.HasOne("Vraze.Models.Challenge", "Challenge")
                        .WithMany("Hints")
                        .HasForeignKey("ChallengeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Challenge");
                });

            modelBuilder.Entity("Vraze.Models.Challenge", b =>
                {
                    b.Navigation("Hints");
                });
#pragma warning restore 612, 618
        }
    }
}
